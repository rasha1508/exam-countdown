<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Exam Countdown</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;500;600&family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            background: transparent; /* Cream/Ivory background */
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
            font-family: 'Inter', sans-serif;
            color: #4A4A4A; /* Slate Gray for text */
        }

        .widget-container {
            width: 100%;
            max-width: 320px;
            background: #FDF6F0; /* Cream/Ivory main background */
            border-radius: 16px;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.06);
            overflow: hidden;
            border: 1px solid rgba(74, 74, 74, 0.1);
        }

        .widget-header {
            background: #4A4A4A; /* Slate Gray for header */
            color: white;
            padding: 18px 16px;
            text-align: center;
        }

        .widget-header h1 {
            font-family: 'Playfair Display', serif;
            font-size: 1.3rem;
            font-weight: 600;
            letter-spacing: 0.2px;
        }

        .widget-content {
            padding: 20px 16px;
        }

        .no-exams {
            text-align: center;
            padding: 40px 20px;
            color: #4A4A4A;
            opacity: 0.7;
        }

        .no-exams i {
            font-size: 3rem;
            color: #A3B18A;
            margin-bottom: 16px;
        }

        .no-exams p {
            font-size: 0.9rem;
            line-height: 1.4;
        }

        .exam-countdown-list {
            display: flex;
            flex-direction: column;
            gap: 16px;
        }

        .exam-countdown-item {
            background: white;
            border-radius: 12px;
            padding: 16px;
            border: 1px solid rgba(74, 74, 74, 0.1);
            transition: all 0.3s ease;
        }

        .exam-countdown-item:hover {
            border-color: #A3B18A;
            box-shadow: 0 4px 12px rgba(163, 177, 138, 0.15);
        }

        .exam-countdown-item.urgent {
            border-left: 4px solid #4A4A4A;
        }

        .exam-countdown-item.very-urgent {
            border-left: 4px solid #4A4A4A;
            background: linear-gradient(135deg, #FDF6F0 0%, #F0E6D2 100%);
        }

        .exam-name {
            font-weight: 600;
            color: #4A4A4A;
            font-size: 1rem;
            margin-bottom: 8px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .exam-name i {
            color: #A3B18A;
            font-size: 0.9rem;
        }

        .exam-date {
            font-size: 0.8rem;
            color: #4A4A4A;
            opacity: 0.8;
            margin-bottom: 12px;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .exam-date i {
            color: #A3B18A;
            font-size: 0.8rem;
        }

        .countdown-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .countdown-display {
            display: flex;
            gap: 8px;
        }

        .countdown-unit {
            text-align: center;
            background: #F0E6D2;
            border-radius: 6px;
            padding: 6px 8px;
            min-width: 40px;
        }

        .countdown-unit.urgent {
            background: #A3B18A;
            color: white;
        }

        .countdown-unit.very-urgent {
            background: #4A4A4A;
            color: white;
        }

        .countdown-number {
            font-size: 1.1rem;
            font-weight: 600;
            line-height: 1;
        }

        .countdown-label {
            font-size: 0.7rem;
            opacity: 0.8;
            margin-top: 2px;
        }

        .countdown-status {
            font-size: 0.8rem;
            font-weight: 500;
            padding: 4px 10px;
            border-radius: 12px;
            background: #E8F4F8;
            color: #4A4A4A;
        }

        .countdown-status.upcoming {
            background: #F0E6D2;
            color: #4A4A4A;
        }

        .countdown-status.urgent {
            background: #A3B18A;
            color: white;
        }

        .countdown-status.very-urgent {
            background: #4A4A4A;
            color: white;
        }

        .countdown-status.overdue {
            background: #E8C9C0;
            color: #4A4A4A;
        }

        .divider {
            height: 1px;
            background: linear-gradient(90deg, transparent, rgba(74, 74, 74, 0.2), transparent);
            margin: 16px 0;
        }

        .section-title {
            font-family: 'Playfair Display', serif;
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 12px;
            color: #4A4A4A;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .section-title i {
            color: #A3B18A;
            font-size: 0.9rem;
        }

        .exam-summary {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 12px;
            margin-bottom: 16px;
        }

        .summary-card {
            background: white;
            padding: 12px;
            border-radius: 8px;
            text-align: center;
            border: 1px solid rgba(74, 74, 74, 0.1);
        }

        .summary-number {
            font-size: 1.5rem;
            font-weight: 600;
            color: #4A4A4A;
        }

        .summary-label {
            font-size: 0.8rem;
            color: #4A4A4A;
            opacity: 0.8;
            margin-top: 2px;
        }
    </style>
</head>
<body>
    <div class="widget-container">
        <div class="widget-header">
            <h1>Exam Countdown</h1>
        </div>
        <div class="widget-content">
            <div class="section">
                <div class="section-title">
                    <i class="fas fa-chart-bar"></i> Overview
                </div>
                <div class="exam-summary">
                    <div class="summary-card">
                        <div class="summary-number" id="totalExams">0</div>
                        <div class="summary-label">Total Exams</div>
                    </div>
                    <div class="summary-card">
                        <div class="summary-number" id="upcomingExams">0</div>
                        <div class="summary-label">Upcoming</div>
                    </div>
                </div>
            </div>

            <div class="divider"></div>

            <div class="section">
                <div class="section-title">
                    <i class="fas fa-clock"></i> Countdown Timers
                </div>
                <div id="examCountdownList">
                    <div class="no-exams">
                        <i class="fas fa-graduation-cap"></i>
                        <p>No upcoming exams found.<br>Add exams in the Assignment & Exam Tracker to see countdowns here.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Function to load assignments from localStorage
            function loadAssignments() {
                return JSON.parse(localStorage.getItem('assignments')) || [];
            }

            // Function to calculate countdown
            function calculateCountdown(dueDate) {
                const now = new Date();
                const due = new Date(dueDate);
                const diff = due - now;

                if (diff <= 0) {
                    return {
                        days: 0,
                        hours: 0,
                        minutes: 0,
                        seconds: 0,
                        isOverdue: true
                    };
                }

                const days = Math.floor(diff / (1000 * 60 * 60 * 24));
                const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
                const seconds = Math.floor((diff % (1000 * 60)) / 1000);

                return {
                    days,
                    hours,
                    minutes,
                    seconds,
                    isOverdue: false
                };
            }

            // Function to get status based on countdown
            function getStatus(countdown) {
                if (countdown.isOverdue) return 'overdue';
                if (countdown.days === 0 && countdown.hours < 6) return 'very-urgent';
                if (countdown.days === 0) return 'urgent';
                if (countdown.days <= 3) return 'upcoming';
                return 'upcoming';
            }

            // Function to format countdown display
            function formatCountdown(countdown) {
                if (countdown.isOverdue) {
                    return 'Overdue';
                }

                const parts = [];
                if (countdown.days > 0) parts.push(`${countdown.days}d`);
                if (countdown.hours > 0) parts.push(`${countdown.hours}h`);
                if (countdown.days === 0 && countdown.minutes > 0) parts.push(`${countdown.minutes}m`);
                
                return parts.join(' ') || 'Now';
            }

            // Function to update the exam countdown widget
            function updateExamCountdown() {
                const assignments = loadAssignments();
                const exams = assignments.filter(a => a.type === 'exam');
                const countdownList = document.getElementById('examCountdownList');
                
                // Update summary
                document.getElementById('totalExams').textContent = exams.length;
                document.getElementById('upcomingExams').textContent = exams.filter(e => {
                    const countdown = calculateCountdown(e.dueDate);
                    return !countdown.isOverdue;
                }).length;

                if (exams.length === 0) {
                    countdownList.innerHTML = `
                        <div class="no-exams">
                            <i class="fas fa-graduation-cap"></i>
                            <p>No upcoming exams found.<br>Add exams in the Assignment & Exam Tracker to see countdowns here.</p>
                        </div>
                    `;
                    return;
                }

                // Sort exams by due date
                const sortedExams = exams.sort((a, b) => new Date(a.dueDate) - new Date(b.dueDate));

                countdownList.innerHTML = '';
                sortedExams.forEach(exam => {
                    const countdown = calculateCountdown(exam.dueDate);
                    const status = getStatus(countdown);
                    const formattedDate = new Date(exam.dueDate).toLocaleDateString('en-US', {
                        weekday: 'short',
                        month: 'short',
                        day: 'numeric',
                        year: 'numeric'
                    });

                    const examItem = document.createElement('div');
                    examItem.className = `exam-countdown-item ${status}`;
                    
                    examItem.innerHTML = `
                        <div class="exam-name">
                            <i class="fas fa-graduation-cap"></i>
                            <span>${exam.name}</span>
                        </div>
                        <div class="exam-date">
                            <i class="fas fa-calendar"></i>
                            <span>${formattedDate}</span>
                        </div>
                        <div class="countdown-container">
                            <div class="countdown-display">
                                ${countdown.isOverdue ? '' : `
                                    <div class="countdown-unit ${status}">
                                        <div class="countdown-number">${countdown.days}</div>
                                        <div class="countdown-label">Days</div>
                                    </div>
                                    <div class="countdown-unit ${status}">
                                        <div class="countdown-number">${countdown.hours}</div>
                                        <div class="countdown-label">Hours</div>
                                    </div>
                                    <div class="countdown-unit ${status}">
                                        <div class="countdown-number">${countdown.minutes}</div>
                                        <div class="countdown-label">Mins</div>
                                    </div>
                                `}
                            </div>
                            <div class="countdown-status ${status}">
                                ${countdown.isOverdue ? 'Overdue' : formatCountdown(countdown)}
                            </div>
                        </div>
                    `;
                    
                    countdownList.appendChild(examItem);
                });
            }

            // Update countdown every second
            function startCountdownTimer() {
                updateExamCountdown();
                setInterval(updateExamCountdown, 1000);
            }

            // Listen for storage changes
            window.addEventListener('storage', function(e) {
                if (e.key === 'assignments') {
                    updateExamCountdown();
                }
            });

            // Start the countdown timer
            startCountdownTimer();
        });
    </script>
</body>
</html>
